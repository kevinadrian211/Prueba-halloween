// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Costume {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  weakness    String[]
  skills      String[]
  price       Int
  stock       Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  transactions CostumeTransaction[]
}

model Attendee {
  id        Int      @id @default(autoincrement())
  dni       String   @unique
  firstName String
  lastName  String
  address   String?
  money     Int
  age       Int
  fears     String[]
  isNervous Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  budget Budget?
  transactions CostumeTransaction[]
  terrorHouseAccess TerrorHouseAccess?
}

model Party {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  date      DateTime
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  configurations PartyConfiguration[]
}

model Budget {
  id        Int      @id @default(autoincrement())
  attendeeId Int     @unique
  amount    Int
  timestamp DateTime

  // Relations
  attendee Attendee @relation(fields: [attendeeId], references: [id])
}

model Activity {
  id          Int      @id @default(autoincrement())
  name        String
  description String?

  // Add other fields as needed
}

model PartyConfiguration {
  id          Int      @id @default(autoincrement())
  partyId     Int
  music       String?
  decorations String?
  theme       String?

  // Relations
  party Party @relation(fields: [partyId], references: [id])
}

model CostumeTransaction {
  id        Int      @id @default(autoincrement())
  attendeeId Int
  costumeId  Int
  amountPaid Int
  timestamp  DateTime

  // Relations
  attendee Attendee @relation(fields: [attendeeId], references: [id])
  costume Costume @relation(fields: [costumeId], references: [id])
}

model TerrorHouseAccess {
  id        Int      @id @default(autoincrement())
  attendeeId Int     @unique
  allowed   Boolean
  timestamp DateTime

  // Relations
  attendee Attendee @relation(fields: [attendeeId], references: [id])
}
